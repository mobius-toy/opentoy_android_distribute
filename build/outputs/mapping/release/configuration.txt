# The proguard configuration file for the following section is /Users/ddd/GitHub/opentoy_workspace/opentoy_android_distribute/build/intermediates/aapt_proguard_file/release/generateReleaseLibraryProguardRules/aapt_rules.txt
# Generated by the gradle plugin

# End of content from /Users/ddd/GitHub/opentoy_workspace/opentoy_android_distribute/build/intermediates/aapt_proguard_file/release/generateReleaseLibraryProguardRules/aapt_rules.txt
# The proguard configuration file for the following section is /Users/ddd/GitHub/opentoy_workspace/opentoy_android_distribute/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.9.1
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from /Users/ddd/GitHub/opentoy_workspace/opentoy_android_distribute/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.9.1
# The proguard configuration file for the following section is /Users/ddd/GitHub/opentoy_workspace/opentoy_android_distribute/proguard-rules.pro
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# Keep OpenToy public API classes and methods
-keep class com.mobius.opentoy.OpenToyAndroid { *; }
-keep class com.mobius.opentoy.OpenToyResult { *; }
-keep class com.mobius.opentoy.OpenToyError { *; }
-keep class com.mobius.opentoy.OpenToyDevice { *; }
-keep class com.mobius.opentoy.OpenToyCoreDelegate { *; }

# Obfuscate internal implementation classes
# Remove this line to keep all internal classes
# -keep class com.mobius.opentoy.** { *; }

# Keep Flutter plugin classes
-keep class io.flutter.plugin.** { *; }

# Keep Bluetooth related classes
-keep class android.bluetooth.** { *; }

# Keep Kotlin metadata for reflection
-keep class kotlin.** { *; }
-keep class kotlin.Metadata { *; }

# Keep coroutines related classes
-keep class kotlinx.coroutines.** { *; }

# Keep annotations
-keepattributes *Annotation*

# Keep generic signatures
-keepattributes Signature

# Keep enclosing methods
-keepattributes EnclosingMethod

# Remove debug logs
-assumenosideeffects class android.util.Log {
    public static *** d(...);
    public static *** v(...);
    public static *** i(...);
}

# Optimize
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*
-optimizationpasses 5
-allowaccessmodification

# Prevent renaming of public API
-keep public class com.mobius.opentoy.OpenToyAndroid {
    public <init>(...);
    public com.mobius.opentoy.OpenToyResult initializeBluetooth();
    public com.mobius.opentoy.OpenToyResult startScan();
    public com.mobius.opentoy.OpenToyResult stopScan();
    public com.mobius.opentoy.OpenToyResult connectToDevice(java.lang.String);
    public com.mobius.opentoy.OpenToyResult disconnectFromDevice(java.lang.String);
    public void readBatteryLevel(java.lang.String, kotlin.jvm.functions.Function1);
    public void writeMotor(java.lang.String, java.util.List, kotlin.jvm.functions.Function1);
    public void setContext(android.content.Context);
    public void cleanup();
}

-keep public class com.mobius.opentoy.OpenToyResult {
    public static com.mobius.opentoy.OpenToyResult$Success Success(...);
    public static com.mobius.opentoy.OpenToyResult$Failure Failure(...);
}

-keep public class com.mobius.opentoy.OpenToyError {
    public static com.mobius.opentoy.OpenToyError BluetoothNotInitialized;
    public static com.mobius.opentoy.OpenToyError BluetoothNotAvailable;
    public static com.mobius.opentoy.OpenToyError DeviceNotFound;
    public static com.mobius.opentoy.OpenToyError DeviceNotConnected;
    public static com.mobius.opentoy.OpenToyError ReadFailed;
    public static com.mobius.opentoy.OpenToyError WriteFailed;
}

-keep public class com.mobius.opentoy.OpenToyDevice {
    public <init>(...);
    public java.lang.String getId();
    public java.lang.String getName();
    public int getRssi();
    public boolean isConnectable();
}

-keep public class com.mobius.opentoy.OpenToyCoreDelegate {
    public void bluetoothStateChanged(java.lang.String);
    public void deviceDiscovered(java.util.Map);
    public void deviceConnected(java.lang.String, java.util.Map);
    public void deviceDisconnected(java.lang.String, java.lang.String);
    public void deviceConnectionFailed(java.lang.String, java.lang.String);
    public void characteristicValueUpdated(java.lang.String, java.lang.String, java.util.List);
    public void characteristicReadFailed(java.lang.String, java.lang.String, java.lang.String);
    public void characteristicWriteSuccess(java.lang.String, java.lang.String);
    public void characteristicWriteFailed(java.lang.String, java.lang.String, java.lang.String);
    public void servicesDiscoveryFailed(java.lang.String, java.lang.String);
    public void characteristicsDiscoveryFailed(java.lang.String, java.lang.String, java.lang.String);
}

# Suppress warnings for missing classes
-dontwarn java.lang.invoke.StringConcatFactory

# End of content from /Users/ddd/GitHub/opentoy_workspace/opentoy_android_distribute/proguard-rules.pro
# The proguard configuration file for the following section is /Users/ddd/.gradle/caches/8.11.1/transforms/4f5bf9ba91a29d6b8c6e3ff001af4217/transformed/core-1.13.1/proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from /Users/ddd/.gradle/caches/8.11.1/transforms/4f5bf9ba91a29d6b8c6e3ff001af4217/transformed/core-1.13.1/proguard.txt
# The proguard configuration file for the following section is /Users/ddd/.gradle/caches/8.11.1/transforms/500e95b27ea463e781a7b20ceb26b30c/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from /Users/ddd/.gradle/caches/8.11.1/transforms/500e95b27ea463e781a7b20ceb26b30c/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is /Users/ddd/.gradle/caches/8.11.1/transforms/eda446dace6ea35216b59b5bbc05727f/transformed/lifecycle-runtime-2.6.2/proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from /Users/ddd/.gradle/caches/8.11.1/transforms/eda446dace6ea35216b59b5bbc05727f/transformed/lifecycle-runtime-2.6.2/proguard.txt
# The proguard configuration file for the following section is /Users/ddd/.gradle/caches/8.11.1/transforms/c2673b3c2163783d28327032550ace34/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from /Users/ddd/.gradle/caches/8.11.1/transforms/c2673b3c2163783d28327032550ace34/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is /Users/ddd/.gradle/caches/8.11.1/transforms/f61a2b5a389678dc8d9280f41d9f771e/transformed/versionedparcelable-1.1.1/proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from /Users/ddd/.gradle/caches/8.11.1/transforms/f61a2b5a389678dc8d9280f41d9f771e/transformed/versionedparcelable-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/ddd/.gradle/caches/8.11.1/transforms/acb49427e0743a5abd18087aeb9655ab/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from /Users/ddd/.gradle/caches/8.11.1/transforms/acb49427e0743a5abd18087aeb9655ab/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/ddd/.gradle/caches/8.11.1/transforms/03f78a08361fe47cfb7755e85269e66c/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from /Users/ddd/.gradle/caches/8.11.1/transforms/03f78a08361fe47cfb7755e85269e66c/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
# The proguard configuration file for the following section is <unknown>
-keep class **.R
-keep class **.R$* {*;}
# End of content from <unknown>